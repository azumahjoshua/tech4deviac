pipeline {
    agent any

    environment {
        // DockerHub credentials and repository info
        DOCKER_HUB_CREDS = credentials('dockerhub-credentials')
        DOCKER_HUB_REPO = 'joshua192'  
        
        // Image names and tags
        API_IMAGE = "${DOCKER_HUB_REPO}/banking-api"
        PROCESSOR_IMAGE = "${DOCKER_HUB_REPO}/banking-processor"
        FRONTEND_IMAGE = "${DOCKER_HUB_REPO}/banking-frontend"
        
        // Version tag based on build number
        VERSION = "v1.0.${BUILD_NUMBER}"
    }

    stages {
        // Verify installed tools
        stage('Verify Tools') {
            steps {
                script {
                    // Check Node.js and npm
                    try {
                        sh 'node -v'
                        sh 'npm -v'
                    } catch (Exception e) {
                        error("Node.js or npm is not installed. Error: ${e}")
                    }

                    // Check Go
                    try {
                        sh 'go version'
                    } catch (Exception e) {
                        error("Go is not installed. Error: ${e}")
                    }

                    // Check Python
                    try {
                        sh 'python3 --version'
                    } catch (Exception e) {
                        error("Python3 is not installed. Error: ${e}")
                    }

                    // Check Flake8
                    try {
                        sh 'flake8 --version'
                    } catch (Exception e) {
                        error("Flake8 is not installed. Error: ${e}")
                    }

                    // Check Docker
                    try {
                        sh 'docker --version'
                    } catch (Exception e) {
                        error("Docker is not installed. Error: ${e}")
                    }
                }
            }
        }

        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Lint and Format Check') {
            parallel {
                stage('Go Lint') {
                    steps {
                        dir('cicd/banking-app/backend-api') {
                            sh 'go fmt ./...'
                            sh 'go vet ./...'
                        }
                    }
                }
                
                stage('Python Lint') {
                    steps {
                        dir('cicd/banking-app/transaction-service') {
                            echo 'Running flake8...'
                            sh '/opt/python-tools/bin/flake8 . --exit-zero --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=Dockerfile'
                        }
                    }
                }
                
                stage('JavaScript Lint') {
                    steps {
                        dir('cicd/banking-app/frontend') {
                            sh 'npm install'
                            sh 'npm run lint || true'  
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up workspace...'
            deleteDir() 
        }

        success {
            echo 'Pipeline completed successfully!'
        }

        failure {
            echo 'Pipeline failed!'
        }
    }
}