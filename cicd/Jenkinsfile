@Library('../../jenkins/shared_libraries') _

pipeline {
    agent any

    parameters {
        string(name: 'BRANCH', defaultValue: 'main', description: 'Git branch to build')
        string(name: 'DOCKER_REPO', defaultValue: 'joshua192', description: 'Docker repository name')
    }

    stages {
        stage('Debug Paths') {
            steps {
                script {
                    echo "=== ENVIRONMENT DEBUGGING ==="
                    sh 'pwd'  
                    sh 'ls -la'  
                    
                    // Check Jenkins library loading
                    try {
                        def lib = library('../jenkins/shared_libraries')
                        echo "Library loaded successfully: ${lib.toString()}"
                    } catch (Exception e) {
                        echo "WARNING: Library loading failed: ${e.getMessage()}"
                    }
                    
                    // Check SCM checkout location
                    echo "Workspace: ${env.WORKSPACE}"
                    echo "Build URL: ${env.BUILD_URL}"
                    
                    // Check Git information
                    sh 'git --version'
                    sh 'git config --list'
                    sh 'git remote -v'
                }
            }
        }

        stage('Get Commit Info') {
            steps {
                script {
                    def commit = getCommitInfo()
                    echo """
                    Build Information:
                    - Commit Hash: ${commit.hash}
                    - Author: ${commit.author}
                    - Message: ${commit.message}
                    """
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline completed - ${currentBuild.result}"
        }
    }
}